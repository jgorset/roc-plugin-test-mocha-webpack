{"version":3,"sources":["../../src/roc/index.js"],"names":["lazyRequire","require","required","plugins","resolve","dependencies","exports","config","meta","actions","hook","description","action","extension","hooks","initialValue","returns","arguments","target","validator","babelConfig","coverage","commands","development","test","override","options","grep","alias","watch","default","undefined","runtime"],"mappings":";;;;;;AAAA;;AACA;;AAEA;;;;AACA;;;;AAEA;;;;AAEA,MAAMA,cAAc,8BAAoBC,OAApB,CAApB;;kBAEe;AACXC,cAAU;AACN,wCAAgC;AAD1B,KADC;AAIXC,aAAS,CACLF,QAAQG,OAAR,CAAgB,0BAAhB,CADK,CAJE;AAOXC,kBAAc;AACVC,iBAAS,kDAAkC,CAAC,QAAD,CAAlC;AADC,KAPH;AAUXC,+BAVW;AAWXC,iCAXW;AAYXC,aAAS,CAAC;AACNC,cAAM,kBADA;AAENC,qBAAa,wDAFP;AAGNC,gBAAQZ,YAAY,iBAAZ;AAHF,KAAD,EAIN;AACCa,6BADD;AAECH,cAAM,eAFP;AAGCC,qBAAa,gDAHd;AAICC,gBAAQZ,YAAY,oBAAZ;AAJT,KAJM,EASN;AACCU,cAAM,cADP;AAECE,gBAAQZ,YAAY,kBAAZ;AAFT,KATM,CAZE;AAyBXc,WAAO;AACH,yBAAiB;AACbH,yBAAa,kEADA;AAEbI,0BAAc,EAFD;AAGbC,qBAAS,2BAHI;AAIbC,uBAAW;AACPC,wBAAQ;AACJC,mDADI;AAEJR,iCAAa;AAFT,iBADD;AAKPS,6BAAa;AACTD,+BAAW,2BADF;AAETR,iCAAa;AAFJ;AALN;AAJE,SADd;AAgBH,wBAAgB;AACZA,yBAAa,gFADD;AAEZI,0BAAc,EAFF;AAGZC,qBAAS,2BAHG;AAIZC,uBAAW;AACPC,wBAAQ;AACJC,mDADI;AAEJR,iCAAa;AAFT,iBADD;AAKPU,0BAAU;AACNF,oDADM;AAENR,iCAAa;AAFP;AALH;AAJC;AAhBb,KAzBI;AAyDXW,cAAU;AACNC,qBAAa;AACTC,kBAAM;AACFC,0BAAU,0BADR;AAEFC,yBAAS;AACLC,0BAAM;AACFC,+BAAO,GADL;AAEFjB,qCAAa,uDACT,+BAHF;AAIFQ;AAJE,qBADD;AAOLU,2BAAO;AACHD,+BAAO,GADJ;AAEHjB,qCAAa,wCAFV;AAGHmB,iCAAS,KAHN;AAIHX;AAJG,qBAPF;AAaLE,8BAAU;AACNV,qCAAa,uDADP;AAENmB,iCAASC,SAFH;AAGNZ;AAHM,qBAbL;AAkBLa,6BAAS;AACLJ,+BAAO,GADF;AAELjB,qCAAa,uDAFR;AAGLmB,iCAAS,KAHJ;AAILX;AAJK;AAlBJ;AAFP;AADG;AADP;AAzDC,C","file":"index.js","sourcesContent":["import { isString, isObject, isBoolean } from 'roc/validators';\nimport { generateDependencies, lazyFunctionRequire } from 'roc';\n\nimport config from '../config/roc.config.js';\nimport meta from '../config/roc.config.meta.js';\n\nimport { packageJSON, name } from './util';\n\nconst lazyRequire = lazyFunctionRequire(require);\n\nexport default {\n    required: {\n        'roc-package-webpack-node-dev': '^1.0.0-beta',\n    },\n    plugins: [\n        require.resolve('roc-abstract-plugin-test'),\n    ],\n    dependencies: {\n        exports: generateDependencies(packageJSON, ['expect']),\n    },\n    config,\n    meta,\n    actions: [{\n        hook: 'run-test-command',\n        description: 'Adds support for running tests with nyc using Webpack.',\n        action: lazyRequire('../actions/test'),\n    }, {\n        extension: name,\n        hook: 'build-webpack',\n        description: 'Adds Webpack configuration specific for tests.',\n        action: lazyRequire('../actions/webpack'),\n    }, {\n        hook: 'babel-config',\n        action: lazyRequire('../actions/babel'),\n    }],\n    hooks: {\n        'build-webpack': {\n            description: 'Used to create the final Webpack configuration object for tests.',\n            initialValue: {},\n            returns: isObject(),\n            arguments: {\n                target: {\n                    validator: isString,\n                    description: 'The target for which the Webpack configuration should be build for.',\n                },\n                babelConfig: {\n                    validator: isObject(),\n                    description: 'The Babel configuration that should be used for the Webpack build.',\n                },\n            },\n        },\n        'babel-config': {\n            description: 'Used to create a Babel configuration to be used in the Webpack build for test.',\n            initialValue: {},\n            returns: isObject(),\n            arguments: {\n                target: {\n                    validator: isString,\n                    description: 'The target that is used.',\n                },\n                coverage: {\n                    validator: isBoolean,\n                    description: 'If the code should be prepared for coverage generation.',\n                },\n            },\n        },\n    },\n    commands: {\n        development: {\n            test: {\n                override: 'roc-abstract-plugin-test',\n                options: {\n                    grep: {\n                        alias: 'g',\n                        description: 'Will only run tests that match the given pattern. ' +\n                            'Will be compiled to a RegExp.',\n                        validator: isString,\n                    },\n                    watch: {\n                        alias: 'w',\n                        description: 'If the tests should run in watch mode.',\n                        default: false,\n                        validator: isBoolean,\n                    },\n                    coverage: {\n                        description: 'If coverage reports should be generated for the code.',\n                        default: undefined,\n                        validator: isBoolean,\n                    },\n                    runtime: {\n                        alias: 'r',\n                        description: 'If the runtime from roc-plugin-start should be added.',\n                        default: false,\n                        validator: isBoolean,\n                    },\n                },\n            },\n        },\n    },\n};\n"]}
{"version":3,"sources":["../../src/actions/test.js"],"names":["targets","grep","watch","coverage","runtime","find","target","cover","undefined","build","mode","babelConfig","webpackConfig"],"mappings":";;;;;;AAAA;;AAEA;;AACA;;;;;;kBAEe,MAAM,CAACA,OAAD,WAAiD;AAAA,QAArCC,IAAqC,QAArCA,IAAqC;AAAA,QAA/BC,KAA+B,QAA/BA,KAA+B;AAAA,QAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,QAAdC,OAAc,QAAdA,OAAc;;AAClE,QAAIJ,QAAQK,IAAR,CAAcC,MAAD,IAAYA,WAAW,MAApC,CAAJ,EAAiD;AAC7C,eAAO,MAAM;AACT;AACA,kBAAMC,QAAQJ,aAAaK,SAAb,GAAyB,CAACN,KAA1B,GAAkCC,QAAhD;;AAEA,qCAAe,EAAEM,OAAO,EAAEC,MAAM,MAAR,EAAT,EAAf;;AAEA;AACA,kBAAMC,cAAc,sBAAW,cAAX,EAA2B,MAA3B,EAAmCJ,KAAnC,CAApB;AACA,kBAAMK,gBAAgB,sBAAW,eAAX,EAA4B,MAA5B,EAAoCD,WAApC,CAAtB;;AAEA,+BAAU,EAAEV,IAAF,EAAQC,KAAR,EAAeC,UAAUI,KAAzB,EAAgCH,OAAhC,EAAyCQ,aAAzC,EAAV;AACH,SAXD;AAYH;;AAED,WAAOJ,SAAP;AACH,C","file":"test.js","sourcesContent":["import { appendSettings } from 'roc';\n\nimport { invokeHook } from '../roc/util';\nimport nycRunner from '../nyc';\n\nexport default () => (targets, { grep, watch, coverage, runtime }) => {\n    if (targets.find((target) => target === 'node')) {\n        return () => {\n            // By default set coverage to true in non-watch\n            const cover = coverage === undefined ? !watch : coverage;\n\n            appendSettings({ build: { mode: 'test' } });\n\n            // Create Webpack configuration that is to be used in a node.\n            const babelConfig = invokeHook('babel-config', 'node', cover);\n            const webpackConfig = invokeHook('build-webpack', 'node', babelConfig);\n\n            nycRunner({ grep, watch, coverage: cover, runtime, webpackConfig });\n        };\n    }\n\n    return undefined;\n};\n"]}